#define Destination_Path ''
#define Message_Length 105
#define End_Header       8

macro Stat_Cut from EDIT
{

  ignore_case  = false;
  reg_exp_stat = false;
  insert_mode  =  true;

  set_global_int ('REG_EXP_STYLE', 0);

  int Cut_Flag       = 0;
  int Part_Number    = 0;
  int Message_Number = 0;
  int End_Message    = 0;
  int Curent_Window  = 0;

  // -----------------------------------------------
  // Проверка: "А то ли нам подсунули на обработку?" ;-)
  // -----------------------------------------------

  tof;

  if (not (search_fwd ('Echomail-statistics generated by FastEcho ',3))){
    run_macro("meerror^messagebox
      /T= Error
      /M= Loaded Text is NOT a Echomail-Statistics generated by FastEcho V1.4?
      /NW=1
      /B=1"
    );
    delay (10000);
    goto Exit;
  }

  // ------------------------------
  // Поиск конца текущего фрагмента :-|
  // ------------------------------

  working;
  push_undo;

  Begin:

  goto_line   (End_Header);
  goto_col             (1);
  End_Message = End_Header;

  while (search_fwd ('----------', 0)) {
    down;
    search_fwd ('----------', 0);
    down;
    if (c_line > Message_Length) break;
    End_Message = c_line;
  }

  // ------------------------------------------
  // Разрезание (если нужно) текущего фрагмента :-(
  // ------------------------------------------

  if (End_Message == End_Header) {
    End_Message = c_line - 5;
    if (End_Message > Message_Length) End_Message = Message_Length;
    goto_line (End_Header);
    block_begin;
    down;
    block_end;
    goto_line (End_Message - 1);
    copy_block;
    down;
    block_begin;
    block_end;
    up;
    copy_block;
    eol;
    cr;
    text (" To be Continue in Next Message");
    cr;
    Cut_Flag = 1;
  }

  // ---------------------------------------------------------------
  // Пометка (если нужно) номера отпиленной части текущего фрагмента :-X
  // ---------------------------------------------------------------

  if ((Cut_Flag == 1) || (Part_Number != 0)) {
    goto_line   (End_Header);
    goto_col             (1);
    search_fwd  ('  ',    0);
    insert_mode      = false;
    text ("  (Part " + str(++Part_Number) + ")");
    insert_mode      =  true;
  }
  if (Cut_Flag == 0) Part_Number = 0;
  Cut_Flag = 0;

  // --------------------------------
  // Запись текущего фрагмента в файл :-Q
  // --------------------------------

  tof;
  block_begin;
  goto_line (End_Message + 1);
  block_end;
  Curent_Window = cur_window;
  create_window;
  if (error_level != 0) {
    run_macro("meerror^messagebox
      /T= Error
      /M= Can't Open New Window for Save Marked Block
      /NW=1
      /B=1"
    );
    delay (10000);
    goto Exit;
  }
  file_name         = Destination_Path + 'FEStat.' + str (++Message_Number);
  line_terminator   =                                              '|13|10';
  fixed_line_length =                                                    0 ;
  window_copy                                               (Curent_Window);
  save_file;
  if (error_level != 0) {
    run_macro("meerror^messagebox
      /T= Error
      /M= Can't Save file " + Destination_Path     + "FEStat."
                            + str (Message_Number) + "
      /NW=1
      /B=1"
    );
    delay (10000);
    goto Exit;
  }
  delete_window;
  switch_window (Curent_Window);

  // -----------------------------------------
  // Проверка: "А нужно ли еще что то делать?" :-?
  // -----------------------------------------

  goto_line (End_Message);
  if (not (search_fwd ('----------', 0))) goto Exit;

  // ------------------------------
  // Удаление записанного фрагмента |-Q
  // ------------------------------

  End_Message = c_line - 2;
  goto_line   (End_Header);
  block_begin;
  goto_line (End_Message);
  block_end;
  delete_block;

  // ------------------------------
  // Обработка следующего фрагмента :)
  // ------------------------------

  goto Begin;

  // --------------
  // Exi-i-i-i-i-it ;-)))))))))))))))))))))
  // --------------

  Exit:

  pop_undo;
  undo;
  set_global_int('RESTORE', 0);
  run_macro("exit^exit /NP=1");

}
